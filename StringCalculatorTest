package com.example.calculator;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class StringCalculatorTest {

    private final StringCalculator calculator = new StringCalculator();

    @Test
    void emptyStringReturnsZero() {
        assertEquals(0, calculator.add(""));
    }

    @Test
    void singleNumberReturnsItself() {
        assertEquals(5, calculator.add("5"));
    }

    @Test
    void twoNumbersCommaSeparated() {
        assertEquals(3, calculator.add("1,2"));
    }

    @Test
    void multipleNumbersCommaSeparated() {
        assertEquals(10, calculator.add("1,2,3,4"));
    }

    @Test
    void numbersWithNewlineAndComma() {
        assertEquals(6, calculator.add("1\n2,3"));
    }

    @Test
    void customDelimiter() {
        assertEquals(3, calculator.add("//;\n1;2"));
    }

    @Test
    void negativeNumbersThrowException() {
        IllegalArgumentException ex = assertThrows(IllegalArgumentException.class,
                () -> calculator.add("1,-2,3,-4"));
        assertEquals("negatives not allowed: -2,-4", ex.getMessage());
    }

    @Test
    void numbersGreaterThan1000AreIgnored() {
        assertEquals(2, calculator.add("2,1001"));
    }

    @Test
    void delimitersOfAnyLength() {
        assertEquals(6, calculator.add("//[***]\n1***2***3"));
    }
}
